{"version":3,"file":"component---src-pages-background-js-7cacb1fe05929fbd5ca1.js","mappings":"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","sources":["webpack://fhir-demo-2024/./src/pages/background.js"],"sourcesContent":["import * as React from 'react';\n\nconst Background = (props) => {\n  const [width, setWidth] = React.useState(undefined);\n\n  React.useEffect(() => {\n    setWidth(typeof window !== `undefined` ? window.innerWidth : 2500);\n  }, []);\n\n  if (width === undefined) {\n    return null;\n  }\n\n  const height = 15000;\n\n  const lineLength = 300;\n  const strokeWidth = 14;\n  const lineCount = width * height / 1000 / lineLength;\n  \n  function getRandomCoord({ x, y, direction }) {\n    let distance;\n    let newDirection;\n    let x1 = -1;\n    let y1 = -1;\n    let counter = 0;\n    while (x1 <= strokeWidth\n      || x1 >= (width - strokeWidth)\n      || y1 <= strokeWidth\n      || y1 >= (height - strokeWidth)) {\n      if (counter++ > 10) {\n        // Too difficult, we're in a tough corner...\n        return { x, y, direction};\n      }\n      distance = (Math.floor(Math.random() * lineLength)) + 20;\n      distance -= distance % strokeWidth;\n      newDirection =  direction + Math.floor(Math.random() * 4) + 6;\n      newDirection %= 8;\n      switch (newDirection) {\n        case 0:\n          x1 = x;\n          y1 = y - distance;\n          break;\n        case 1:\n          x1 = x + distance;\n          y1 = y - distance;\n          break;\n        case 2:\n          x1 = x + distance;\n          y1 = y;\n          break;\n        case 3:\n          x1 = x + distance;\n          y1 = y + distance;\n          break;\n        case 4:\n          x1 = x;\n          y1 = y + distance;\n          break;\n        case 5:\n          x1 = x - distance;\n          y1 = y + distance;\n          break;\n        case 6:\n          x1 = x - distance;\n          y1 = y;\n          break;\n        case 7:\n          x1 = x - distance;\n          y1 = y - distance;\n          break;\n        default:\n      }\n    }\n    return { x: x1, y: y1, direction: newDirection };\n  }\n  \n  const pattern = [];\n  for (let i=0; i < lineCount; i += 1) {\n    const coords = [];\n    let x0 = Math.random() * width;\n    x0 -= x0 % strokeWidth;\n    let y0 = Math.random() * height;\n    y0 -= y0 % strokeWidth;\n    let direction0 = Math.floor(Math.random() * 8);\n    for (let i=0; i < 8; i += 1) {\n      const { x, y, direction } = getRandomCoord({ x: x0, y: y0, direction: direction0 });\n      coords.push(`${x},${y}`);\n      x0 = x;\n      y0 = y;\n      direction0 = direction;\n    }\n    const path = `M${coords.join('L')}`;\n    pattern.push(path);\n  }\n  const d = pattern.join(' ');\n  const {\n    children,\n    location,\n    pageContext,\n    pageResources,\n    params,\n    path,\n    serverData,\n    uri,\n    ...rest\n  } = props;\n\n  const rulerLines = [];\n  const adjust = strokeWidth / 2;\n  for (let i=0; i < width; i += strokeWidth) {\n    rulerLines.push(<line key={`v${i}`} x1={i + adjust} x2={i + adjust} y2={height + adjust} />);\n  }\n  for (let i=0; i < height; i += strokeWidth) {\n    rulerLines.push(<line key={`h${i}`} x2={width} y1={i + adjust} y2={i + adjust} />);\n  }\n\n  const style = `\n    line {\n      stroke-width: 0.5px;\n      stroke: var(--color-nav-background);\n      stroke-opacity: 0.4;\n    }\n    path {\n      fill: none;\n    }\n    @media screen and (prefers-reduced-motion: reduce) {\n      circle {\n        animation: none !important;\n        display: none;\n      }\n    }\n  `;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={`0 0 ${width} ${height}`}\n      width={width}\n      height={height}\n      preserveAspectRatio=\"xMidYMid slice\"\n      {...rest}\n    >\n      <style>{style}</style>\n      <g transform=\"translate(0.5, 0.5)\">\n        {rulerLines}\n        <path\n          stroke=\"#010259\"\n          strokeWidth={strokeWidth}\n          vectorEffect=\"non-scaling-stroke\"\n          strokeLinecap=\"square\"\n          d={d}\n        />\n        <path\n          stroke=\"white\"\n          strokeWidth=\"1px\"\n          vectorEffect=\"non-scaling-stroke\"\n          shapeRendering=\"auto\"\n          d={d}\n        />\n        <circle fill=\"white\" r=\"2\">\n          <animateMotion dur={`${width * height / 50000}s`} repeatCount=\"indefinite\" path={d} />\n       </circle>\n      </g>\n    </svg>\n  )\n};\n\nexport default Background;\n"],"names":["props","width","setWidth","React","undefined","window","innerWidth","height","strokeWidth","lineCount","getRandomCoord","_ref","distance","newDirection","x","y","direction","x1","y1","counter","Math","floor","random","pattern","i","coords","x0","y0","direction0","push","path","join","d","children","location","pageContext","pageResources","params","serverData","uri","rest","rulerLines","key","x2","y2","Object","assign","xmlns","viewBox","preserveAspectRatio","transform","stroke","vectorEffect","strokeLinecap","shapeRendering","fill","r","dur","repeatCount"],"sourceRoot":""}