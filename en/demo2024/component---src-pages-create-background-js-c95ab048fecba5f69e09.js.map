{"version":3,"file":"component---src-pages-create-background-js-c95ab048fecba5f69e09.js","mappings":"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","sources":["webpack://fhir-demo-2024/./src/pages/background.js","webpack://fhir-demo-2024/./src/pages/create-background.js"],"sourcesContent":["import * as React from 'react';\n\nconst Background = (props) => {\n  const {\n    animated: animatedParam = true,\n    children,\n    dimmed,\n    height: heightParam = 15000,\n    location = {},\n    pageContext,\n    pageResources,\n    params,\n    path,\n    serverData,\n    uri,\n    width: widthParam,\n    ...rest // This is what we really want...\n  } = props;\n  const { search } = location;\n\n  const [width, setWidth] = React.useState(widthParam);\n  const [height, setHeight] = React.useState(heightParam);\n  const [animated, setAnimated] = React.useState(animatedParam);\n\n  React.useEffect(() => {\n    if (width) {\n      // already set through a parameter\n      return;\n    }\n    const searchParams = new URLSearchParams(search);\n    if (searchParams.has('width')) {\n      setWidth(+searchParams.get('width'));\n      if (searchParams.has('height')) {\n        setHeight(+searchParams.get('height'));\n      }\n    } else {\n      setWidth(typeof window !== `undefined` ? window.innerWidth : 2500);\n    }\n    if (searchParams.has('animated')) {\n      const animatedParam = searchParams.get('animated').toLowerCase();\n      setAnimated(!['false', 'no', 'not'].some(v => v === animatedParam));\n    }\n  }, [search, width]);\n\n  if (width === undefined) {\n    return null;\n  }\n\n  const lineLength = 300;\n  const strokeWidth = 14;\n  const lineCount = width * height / 1000 / lineLength;\n  \n  function getRandomCoord({ x, y, direction }) {\n    let distance;\n    let newDirection;\n    let x1 = -1;\n    let y1 = -1;\n    let counter = 0;\n    while (x1 <= strokeWidth\n      || x1 >= (width - strokeWidth)\n      || y1 <= strokeWidth\n      || y1 >= (height - strokeWidth)) {\n      if (counter++ > 10) {\n        // Too difficult, we're in a tough corner...\n        return { x, y, direction};\n      }\n      distance = (Math.floor(Math.random() * lineLength)) + 20;\n      distance -= distance % strokeWidth;\n      newDirection =  direction + Math.floor(Math.random() * 4) + 6;\n      newDirection %= 8;\n      switch (newDirection) {\n        case 0:\n          x1 = x;\n          y1 = y - distance;\n          break;\n        case 1:\n          x1 = x + distance;\n          y1 = y - distance;\n          break;\n        case 2:\n          x1 = x + distance;\n          y1 = y;\n          break;\n        case 3:\n          x1 = x + distance;\n          y1 = y + distance;\n          break;\n        case 4:\n          x1 = x;\n          y1 = y + distance;\n          break;\n        case 5:\n          x1 = x - distance;\n          y1 = y + distance;\n          break;\n        case 6:\n          x1 = x - distance;\n          y1 = y;\n          break;\n        case 7:\n          x1 = x - distance;\n          y1 = y - distance;\n          break;\n        default:\n      }\n    }\n    return { x: x1, y: y1, direction: newDirection };\n  }\n  \n  const pattern = [];\n  for (let i=0; i < lineCount; i += 1) {\n    const coords = [];\n    let x0 = Math.random() * width;\n    x0 -= x0 % strokeWidth;\n    let y0 = Math.random() * height;\n    y0 -= y0 % strokeWidth;\n    let direction0 = Math.floor(Math.random() * 8);\n    for (let i=0; i < 8; i += 1) {\n      const { x, y, direction } = getRandomCoord({ x: x0, y: y0, direction: direction0 });\n      coords.push(`${x},${y}`);\n      x0 = x;\n      y0 = y;\n      direction0 = direction;\n    }\n    const path = `M${coords.join('L')}`;\n    pattern.push(path);\n  }\n  const d = pattern.join(' ');\n\n  const rulerLines = [];\n  const adjust = strokeWidth / 2;\n  for (let i=0; i < width; i += strokeWidth) {\n    rulerLines.push(<line key={`v${i}`} x1={i + adjust} x2={i + adjust} y2={height + adjust} />);\n  }\n  for (let i=0; i < height; i += strokeWidth) {\n    rulerLines.push(<line key={`h${i}`} x2={width} y1={i + adjust} y2={i + adjust} />);\n  }\n\n  const style = `\n    line {\n      stroke-width: 0.5px;\n      stroke: #010259;\n      stroke-opacity: 0.4;\n    }\n    path {\n      fill: none;\n    }\n    ${ dimmed\n      ? `\n      g {\n        opacity: 0.15;\n      }\n      `\n      : ''\n    }\n    @media screen and (prefers-reduced-motion: reduce) {\n      circle {\n        animation: none !important;\n        display: none;\n      }\n    }\n    @media print {\n      circle {\n        display: none;\n      }\n    }\n  `;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={`${width}px`}\n      height={`${height}px`}\n      viewBox={`0 0 ${width} ${height}`}\n      preserveAspectRatio=\"xMidYMid slice\"\n      {...rest}\n    >\n      <defs>\n        <style>{style}</style>\n      </defs>\n      <g transform=\"translate(0.5, 0.5)\">\n        {rulerLines}\n        <path\n          stroke=\"#010259\"\n          strokeWidth={strokeWidth}\n          vectorEffect=\"non-scaling-stroke\"\n          strokeLinecap=\"square\"\n          d={d}\n        />\n        <path\n          stroke=\"white\"\n          strokeWidth=\"1px\"\n          vectorEffect=\"non-scaling-stroke\"\n          shapeRendering=\"auto\"\n          d={d}\n        />\n        { animated\n        ? (\n          <circle fill=\"white\" r=\"2\">\n            <animateMotion dur={`${width * height / 50000}s`} repeatCount=\"indefinite\" path={d} />\n          </circle>\n        )\n        : null\n        }\n      </g>\n    </svg>\n  )\n};\n\nexport default Background;\n","import * as React from 'react';\nimport Background from './background';\n\nconst CreateBackground = () => {\n\n  const [width, setWidth] = React.useState(1920);\n  const [height, setHeight] = React.useState(1080);\n  const [animated, setAnimated] = React.useState(true);\n  const [dimmed, setDimmed] = React.useState(false);\n  const [, refresh] = React.useState(undefined);\n\n  return (\n    <article id=\"playground\">\n      <h1>Create FHIR Demo 2024 Backgrounds!</h1>\n      <form>\n        <label>\n          Width: <input type=\"number\" name=\"width\" value={width} onChange={(e) => setWidth(e.target.value)} />\n        </label>\n        <label>\n          Height: <input type=\"number\" name=\"height\" value={height} onChange={(e) => setHeight(e.target.value)} />\n        </label>\n        <label>\n          Animated: <input type=\"checkbox\" name=\"animated\" checked={animated} onChange={(e) => setAnimated(e.target.checked)} />\n        </label>\n        <label>\n          Dimmed: <input type=\"checkbox\" name=\"dimmed\" checked={dimmed} onChange={(e) => setDimmed(e.target.checked)} />\n        </label>\n        <button type=\"button\" onClick={() => refresh({})}>Redraw!</button>\n        <button type=\"button\" onClick={() => {}}>Save!</button>\n      </form>\n      <Background key={`${width}x${height}-${animated}`} width={width} height={height} animated={animated} dimmed={dimmed} />\n    </article>\n  )\n};\n\nexport default CreateBackground;\n"],"names":["props","animated","animatedParam","children","dimmed","height","heightParam","location","pageContext","pageResources","params","path","serverData","uri","width","widthParam","rest","search","setWidth","React","setHeight","setAnimated","searchParams","URLSearchParams","has","get","window","innerWidth","toLowerCase","some","v","undefined","strokeWidth","lineCount","getRandomCoord","_ref","distance","newDirection","x","y","direction","x1","y1","counter","Math","floor","random","pattern","i","coords","x0","y0","direction0","push","join","d","rulerLines","key","x2","y2","style","Object","assign","xmlns","viewBox","preserveAspectRatio","transform","stroke","vectorEffect","strokeLinecap","shapeRendering","fill","r","dur","repeatCount","CreateBackground","setDimmed","refresh","id","type","name","value","onChange","e","target","checked","onClick","Background"],"sourceRoot":""}